#!/usr/bin/env python3
"""
Script pour ajouter les clés de traduction manquantes en batch
"""
import json
from pathlib import Path

# Définir les nouvelles clés de traduction nécessaires
NEW_TRANSLATIONS = {
    # Shared conversation page
    "shared.notFound": {
        "en": "This shared conversation does not exist or has been deleted",
        "fr": "Cette conversation partagée n'existe pas ou a été supprimée"
    },
    "shared.expired": {
        "en": "This share link has expired",
        "fr": "Ce lien de partage a expiré"
    },
    "shared.loadError": {
        "en": "Unable to load conversation",
        "fr": "Impossible de charger la conversation"
    },
    "shared.error": {
        "en": "An error occurred",
        "fr": "Une erreur est survenue"
    },
    "shared.loading": {
        "en": "Loading conversation...",
        "fr": "Chargement de la conversation..."
    },
    "shared.unavailable": {
        "en": "Conversation unavailable",
        "fr": "Conversation indisponible"
    },
    "shared.backToHome": {
        "en": "Back to home",
        "fr": "Retour à l'accueil"
    },
    "shared.title": {
        "en": "Intelia Cognito",
        "fr": "Intelia Cognito"
    },
    "shared.subtitle": {
        "en": "Shared conversation",
        "fr": "Conversation partagée"
    },
    "shared.tryFree": {
        "en": "Try for free →",
        "fr": "Essayer gratuitement →"
    },
    "shared.sharedBy": {
        "en": "Conversation shared by {name}",
        "fr": "Conversation partagée par {name}"
    },
    "shared.viewCount": {
        "en": "{count} view",
        "fr": "{count} vue"
    },
    "shared.viewCountPlural": {
        "en": "{count} views",
        "fr": "{count} vues"
    },
    "shared.expiresOn": {
        "en": "Expires on {date}",
        "fr": "Expire le {date}"
    },
    "shared.question": {
        "en": "Question",
        "fr": "Question"
    },
    "shared.answer": {
        "en": "Answer",
        "fr": "Réponse"
    },
    "shared.impressed": {
        "en": "Impressed by the quality of the answers?",
        "fr": "Impressionné par la qualité des réponses ?"
    },
    "shared.createFreeAccount": {
        "en": "Create your free account and ask your own questions to Intelia Cognito, your specialized AI assistant.",
        "fr": "Créez votre compte gratuit et posez vos propres questions à Intelia Cognito, votre assistant IA spécialisé."
    },
    "shared.createAccount": {
        "en": "Create free account",
        "fr": "Créer un compte gratuit"
    },
    "shared.signIn": {
        "en": "Sign in",
        "fr": "Se connecter"
    },
    "shared.generatedBy": {
        "en": "This conversation was generated by",
        "fr": "Cette conversation a été générée par"
    },
    "shared.dataAnonymized": {
        "en": "Personal data has been anonymized to protect the user's privacy.",
        "fr": "Les données personnelles ont été anonymisées pour protéger la vie privée de l'utilisateur."
    },

    # Admin - Subscriptions
    "admin.accessDenied": {
        "en": "Access denied",
        "fr": "Accès refusé"
    },
    "admin.subscriptions.loadError": {
        "en": "Error loading statistics",
        "fr": "Erreur lors du chargement des statistiques"
    },
    "admin.subscriptions.tabs.overview": {
        "en": "Overview",
        "fr": "Vue d'ensemble"
    },
    "admin.subscriptions.tabs.plans": {
        "en": "Plan Management",
        "fr": "Gestion des plans"
    },
    "admin.subscriptions.tabs.pricing": {
        "en": "Country Pricing",
        "fr": "Prix par pays"
    },
    "admin.subscriptions.tabs.history": {
        "en": "History",
        "fr": "Historique"
    },
    "admin.subscriptions.loading": {
        "en": "Loading statistics...",
        "fr": "Chargement des statistiques..."
    },
    "admin.subscriptions.title": {
        "en": "Subscription Management",
        "fr": "Gestion des Abonnements"
    },
    "admin.subscriptions.subtitle": {
        "en": "Complete administration of plans, pricing and quotas",
        "fr": "Administration complète des plans, prix et quotas"
    },
    "admin.subscriptions.back": {
        "en": "← Back",
        "fr": "← Retour"
    },
    "admin.subscriptions.totalSubscriptions": {
        "en": "Total Subscriptions",
        "fr": "Total Abonnements"
    },
    "admin.subscriptions.activeSubscriptions": {
        "en": "Active Subscriptions",
        "fr": "Abonnements Actifs"
    },
    "admin.subscriptions.monthlyRevenue": {
        "en": "Monthly Revenue",
        "fr": "Revenu Mensuel"
    },
    "admin.subscriptions.planBreakdown": {
        "en": "Breakdown by Plan",
        "fr": "Répartition par Plan"
    },
    "admin.subscriptions.plan": {
        "en": "Plan",
        "fr": "Plan"
    },
    "admin.subscriptions.subscribers": {
        "en": "Subscribers",
        "fr": "Abonnés"
    },
    "admin.subscriptions.revenue": {
        "en": "Monthly Revenue",
        "fr": "Revenu Mensuel"
    },
    "admin.subscriptions.percentage": {
        "en": "%",
        "fr": "%"
    },
    "admin.subscriptions.quickActions": {
        "en": "Quick Actions",
        "fr": "Actions Rapides"
    },
    "admin.subscriptions.openStripeDashboard": {
        "en": "Open Stripe Dashboard",
        "fr": "Ouvrir Stripe Dashboard"
    },
    "admin.subscriptions.refreshData": {
        "en": "Refresh data",
        "fr": "Actualiser les données"
    },
    "admin.subscriptions.exportData": {
        "en": "Export data",
        "fr": "Exporter les données"
    },
    "admin.subscriptions.exportComing": {
        "en": "Export coming soon...",
        "fr": "Export à venir..."
    }
}

def add_translations_to_file(file_path, lang_code):
    """Ajouter les traductions manquantes à un fichier de langue"""
    print(f"Processing {file_path}...")

    with open(file_path, 'r', encoding='utf-8') as f:
        data = json.load(f)

    added_count = 0
    for key, translations in NEW_TRANSLATIONS.items():
        if key not in data:
            # Use French or English translation depending on the language code
            if lang_code in translations:
                data[key] = translations[lang_code]
            elif lang_code == "fr":
                data[key] = translations["fr"]
            else:
                data[key] = translations["en"]  # English fallback
            added_count += 1

    with open(file_path, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

    print(f"Added {added_count} new translations to {file_path.name}")
    return added_count

def main():
    locales_dir = Path("frontend/public/locales")

    # Process en.json and fr.json
    for lang in ["en", "fr"]:
        file_path = locales_dir / f"{lang}.json"
        if file_path.exists():
            add_translations_to_file(file_path, lang)

    print("\nDone!")

if __name__ == "__main__":
    main()
