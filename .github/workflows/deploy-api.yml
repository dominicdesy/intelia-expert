name: Deploy Intelia Expert API

on:
  push:
    branches: [ main ]
    paths: 
      - 'backend/**'
      - 'core/**'
      - '.streamlit/**'
      - 'Dockerfile'
      - '.github/workflows/deploy-api.yml'
  pull_request:
    branches: [ main ]
    paths: 
      - 'backend/**'
      - 'core/**'

env:
  REGISTRY: registry.digitalocean.com
  IMAGE_NAME: intelia-expert-api

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    
    - name: Run basic tests
      run: |
        cd backend
        python -c "from app.main import app; print('‚úÖ App imports successfully')"
        python -c "from app.services.expert_service import expert_service; print('‚úÖ Expert service loads')"

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
    - name: Log in to DigitalOcean Container Registry
      run: doctl registry login --expiry-seconds 1200
    
    - name: Build container image
      run: |
        docker build -t $REGISTRY/$IMAGE_NAME:$(echo $GITHUB_SHA | head -c7) .
        docker build -t $REGISTRY/$IMAGE_NAME:latest .
    
    - name: Push image to DigitalOcean Container Registry
      run: |
        docker push $REGISTRY/$IMAGE_NAME:$(echo $GITHUB_SHA | head -c7)
        docker push $REGISTRY/$IMAGE_NAME:latest
    
    - name: Deploy to DigitalOcean App Platform
      uses: digitalocean/app_action@v1.1.5
      with:
        app_name: intelia-expert-api
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        images: '[
          {
            "name": "api",
            "image": {
              "registry_type": "DOCR",
              "repository": "intelia-expert-api",
              "tag": "latest"
            }
          }
        ]'

  notify:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.build-and-deploy.result }}" == "success" ]; then
          echo "‚úÖ Deployment successful!"
          echo "üöÄ API is live at: https://intelia-expert-api.ondigitalocean.app"
        else
          echo "‚ùå Deployment failed"
          exit 1
        fi